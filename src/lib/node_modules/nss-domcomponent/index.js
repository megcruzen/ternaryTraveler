"use strict";

const elementSymbol = Symbol()

class DOMComponent {
    constructor(type, attributes, ...children) {
        this[elementSymbol] = document.createElement(type)

        /*
            If `attributes` is just a string, it's a simple element with no
            properties - just some text content
        */
        if (typeof attributes === "string") {
            this[elementSymbol].textContent = attributes
            return this
        } else if (typeof attributes === "object") {
            this[elementSymbol] = Object.assign(this[elementSymbol], attributes)
        }

        if (children.length) {
            children.forEach(child => {
                // One HTMLElement was passed in
                if (child.element instanceof window.Element) {
                    this[elementSymbol].appendChild(child.element)

                    // An array of elements was passed in
                } else if (Array.isArray(child.element)) {
                    child.element.forEach(c => this[elementSymbol].appendChild(c))

                    // String value was passed in, set text content
                } else {
                    this[elementSymbol].textContent = child
                }
            })
        }

        return this
    }

    get element () {
        return this[elementSymbol]
    }

    render(container) {
        const fragment = document.createDocumentFragment()
        fragment.appendChild(this[elementSymbol])
        document.querySelector(container).appendChild(fragment)
    }
}

module.exports = DOMComponent
